using System;

public class ResourceHolder : IDisposable
{
    // Example of an unmanaged resource
    private IntPtr unmanagedResource;
    private bool disposed = false;

    // Constructor
    public ResourceHolder()
    {
        // Allocate the unmanaged resource
        unmanagedResource = /* allocation logic */;
    }

    // The Dispose method
    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this); // Prevent finalization code from running
    }

    // Protected Dispose method to handle resource cleanup
    protected virtual void Dispose(bool disposing)
    {
        if (!disposed)
        {
            if (disposing)
            {
                // Free managed resources here, if any
            }

            // Free unmanaged resources here
            if (unmanagedResource != IntPtr.Zero)
            {
                // Free the unmanaged resource
                unmanagedResource = IntPtr.Zero;
            }

            disposed = true;
        }
    }

    // Destructor (Finalizer)
    ~ResourceHolder()
    {
        Dispose(false);
    }
}

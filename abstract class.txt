using System;

abstract class Shape
{
    // Abstract method (does not have a body)
    public abstract double CalculateArea();

    // Non-abstract method
    public void Display()
    {
        Console.WriteLine("Displaying shape details:");
    }
}

class Circle : Shape
{
    private double radius;

    public Circle(double radius)
    {
        this.radius = radius;
    }

    // Implementation of the abstract method
    public override double CalculateArea()
    {
        return Math.PI * radius * radius;
    }
}

class Rectangle : Shape
{
    private double width;
    private double height;

    public Rectangle(double width, double height)
    {
        this.width = width;
        this.height = height;
    }

    // Implementation of the abstract method
    public override double CalculateArea()
    {
        return width * height;
    }
}

class Program
{
    static void Main()
    {
        Shape circle = new Circle(5);
        Shape rectangle = new Rectangle(4, 7);

        circle.Display();
        Console.WriteLine("Circle Area: " + circle.CalculateArea());

        rectangle.Display();
        Console.WriteLine("Rectangle Area: " + rectangle.CalculateArea());
    }
}
